version: '3.7'

services:
  
  db:
    image: postgres:9.4
    ports:
     - 6379
    volumes:
      - "db-data:/var/lib/postgresql/data"
    networks:
      - back-tier
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    deploy:
      replicas: 1

  redis:
    image: redis
    networks:
      - back-tier
    ports:
      - 6379
    deploy:
      replicas: 1

  worker:
    image: hadramet/worker
    deploy:
      replicas: 3
    depends_on:
     - redis
     - db
    networks:
     - back-tier

  result:
    image: hadramet/result
    ports:
     - 5001:80
    networks:
     - front-tier
     - back-tier
    # volumes:
    #  - "./Voting-App/result:/app"
    command: nodemon server.js
    depends_on:
      - redis
      - db
    deploy:
      replicas: 3

  vote:
    image: hadramet/vote
    depends_on:
      - redis
      - db
    ports:
      - 5000:80
    networks:
      - back-tier
      - front-tier
    # volumes:
    #  - "./Voting-App/vote:/app"
    command: python app.py
    deploy:
      replicas: 3
  
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
     - back-tier
     - front-tier
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
  
networks:
  front-tier:
  back-tier:

volumes:
  db-data:
  

